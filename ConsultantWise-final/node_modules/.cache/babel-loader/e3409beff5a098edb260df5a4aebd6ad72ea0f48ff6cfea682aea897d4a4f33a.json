{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthgoel_goel2105outlook.com/Desktop/ConsultantWise/src/components/ShowAvailableSlots.js\",\n  _s = $RefreshSig$();\nimport Cookies from 'js-cookie';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\n// receiving the {doctor_id} inside props from doctor card\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowAvailableSlots = props => {\n  _s();\n  const id = props.id;\n  const [data, setData] = useState([]);\n  const [postData, setPostData] = useState({}); // State to hold the POST data\n  const [response, setResponse] = useState(null);\n  const [booked, setBooked] = useState(false);\n  // const fetchData2 = async () => {\n  //   try {\n  //     const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}/${props.date}`);\n  //     const json = await response.json();\n  //     setData(json)\n  //     // console.log(data);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}/${props.date}`);\n        const json = await response.json();\n        setData(json);\n        // console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, [booked]);\n  const handleBookSlot = app_id => {\n    // alert(`A slot was booked with id=$(id)`)\n    console.log(\"slot was booked with id \", app_id);\n    const user_id = Cookies.get('userLoginData');\n    setPostData({\n      ...postData,\n      user_id: user_id,\n      app_id: app_id\n    });\n    console.log(postData);\n    fetch('http://localhost:3001/bookASlot', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json' // Set the content type to JSON\n      },\n\n      body: JSON.stringify(postData) // Convert the data to JSON format\n    }).then(response => response.json()) // Parse the response JSON\n    .then(data => {\n      // Handle the response data\n\n      setResponse(data);\n      // fetchData2();\n      setBooked(!booked);\n    }).catch(error => {\n      // Handle errors\n      console.error('Error:', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.length > 0 && data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", item.startTime, \" -- \", item.endTime, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleBookSlot(item.id);\n          },\n          className: \"bg-yellow-400 mt-4 ml-16 hover:bg-yellow-300 text-white font-bold py-2 px-4 rounded\",\n          children: \"Book Slot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowAvailableSlots, \"PdWL+Hbcs+xY9IobqI1Z+8apG2c=\");\n_c = ShowAvailableSlots;\nexport default ShowAvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableSlots\");","map":{"version":3,"names":["Cookies","React","useEffect","useState","jsxDEV","_jsxDEV","ShowAvailableSlots","props","_s","id","data","setData","postData","setPostData","response","setResponse","booked","setBooked","fetchData","fetch","date","json","error","console","handleBookSlot","app_id","log","user_id","get","method","headers","body","JSON","stringify","then","catch","children","length","map","item","startTime","endTime","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddharthgoel_goel2105outlook.com/Desktop/ConsultantWise/src/components/ShowAvailableSlots.js"],"sourcesContent":["import Cookies from 'js-cookie';\nimport React, { useEffect } from 'react'\nimport { useState } from 'react';\n// receiving the {doctor_id} inside props from doctor card\nconst ShowAvailableSlots = (props) => {\n  const id=props.id;\n  const [data,setData]=useState([]);\n  const [postData, setPostData] = useState({}); // State to hold the POST data\n  const [response, setResponse] = useState(null)\n  const [booked, setBooked] = useState(false)\n  // const fetchData2 = async () => {\n  //   try {\n  //     const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}/${props.date}`);\n  //     const json = await response.json();\n  //     setData(json)\n  //     // console.log(data);\n  //   } catch (error) {\n  //     console.error(error);\n  //   }\n  // };\n  useEffect(()=>{\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}/${props.date}`);\n        const json = await response.json();\n        setData(json)\n        // console.log(data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n\n\n  },[booked])\n\n\n  const handleBookSlot=(app_id)=>{\n    // alert(`A slot was booked with id=$(id)`)\n    console.log(\"slot was booked with id \",app_id);\n    const user_id=Cookies.get('userLoginData');\n    setPostData({\n      ...postData,\n      user_id:user_id,\n      app_id:app_id\n    })\n    console.log(postData);\n    fetch('http://localhost:3001/bookASlot', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json', // Set the content type to JSON\n      },\n      body: JSON.stringify(postData), // Convert the data to JSON format\n    })\n      .then((response) => response.json()) // Parse the response JSON\n      .then((data) => {\n        // Handle the response data\n        \n        setResponse(data);\n        // fetchData2();\n        setBooked(!booked);\n      })\n      .catch((error) => {\n        // Handle errors\n        console.error('Error:', error);\n      });\n    \n\n  }\n  \n  return (\n    <div>\n      \n      <ul>\n        \n        {data.length>0 && (data.map((item) => (\n          <li key={item.id}> {item.startTime} -- {item.endTime} \n          <button onClick={()=>{\n            handleBookSlot(item.id);\n          }}\n      className=\"bg-yellow-400 mt-4 ml-16 hover:bg-yellow-300 text-white font-bold py-2 px-4 rounded\"\n    >\n      Book Slot\n    </button>\n          \n          </li>\n        )))}\n      </ul>\n\n\n    </div>\n  )\n}\n\nexport default ShowAvailableSlots\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}