{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/ShowAvailableSlots.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowAvailableSlots = props => {\n  _s();\n  const id = props.id;\n  const [data, setData] = useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}`);\n      const json = await response.json();\n      setData(json);\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  fetchData();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"These are the available slots list\", /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\" \", item.startTime, \" -- \", item.endTime, /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \" Book Slot \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowAvailableSlots, \"ZhdFFZzxrIZ1AkLU34uuoZfaEnY=\");\n_c = ShowAvailableSlots;\nexport default ShowAvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"ShowAvailableSlots\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ShowAvailableSlots","props","_s","id","data","setData","fetchData","response","fetch","json","console","log","error","children","map","item","startTime","endTime","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/ShowAvailableSlots.js"],"sourcesContent":["import React from 'react'\nimport { useState } from 'react';\n\nconst ShowAvailableSlots = (props) => {\n  const id=props.id;\n  const [data,setData]=useState([]);\n  const fetchData = async () => {\n    try {\n      const response = await fetch(`http://localhost:3001/getDoctorFreeSlotDetails/${id}`);\n      const json = await response.json();\n      setData(json)\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  fetchData();\n  return (\n    <div>\n      These are the available slots list\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}> {item.startTime} -- {item.endTime}\n          <button> Book Slot </button>\n          </li>\n        ))}\n      </ul>\n\n\n    </div>\n  )\n}\n\nexport default ShowAvailableSlots\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,MAAMC,kBAAkB,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAMC,EAAE,GAACF,KAAK,CAACE,EAAE;EACjB,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAACR,QAAQ,CAAC,EAAE,CAAC;EACjC,MAAMS,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,kDAAiDL,EAAG,EAAC,CAAC;MACpF,MAAMM,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,EAAE;MAClCJ,OAAO,CAACI,IAAI,CAAC;MACbC,OAAO,CAACC,GAAG,CAACP,IAAI,CAAC;IACnB,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EACDN,SAAS,EAAE;EACX,oBACEP,OAAA;IAAAc,QAAA,GAAK,oCAEH,eAAAd,OAAA;MAAAc,QAAA,EACGT,IAAI,CAACU,GAAG,CAAEC,IAAI,iBACbhB,OAAA;QAAAc,QAAA,GAAkB,GAAC,EAACE,IAAI,CAACC,SAAS,EAAC,MAAI,EAACD,IAAI,CAACE,OAAO,eACpDlB,OAAA;UAAAc,QAAA,EAAQ;QAAW;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GADnBN,IAAI,CAACZ,EAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAGjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAGD;AAEV,CAAC;AAAAnB,EAAA,CA5BKF,kBAAkB;AAAAsB,EAAA,GAAlBtB,kBAAkB;AA8BxB,eAAeA,kBAAkB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}