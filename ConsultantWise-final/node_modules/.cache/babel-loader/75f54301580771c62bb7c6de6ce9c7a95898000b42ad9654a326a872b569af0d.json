{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/AvailableSlots.js\",\n  _s = $RefreshSig$();\nimport Cookies from 'js-cookie';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableSlots = async props => {\n  _s();\n  const dateToSearch = props.date;\n  // const id=Cookies.get('userLoginData').id;\n  const id = \"jndjwnj\";\n  const [timeSlotData, setTimeSlotData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const res = await fetch(\"http://localhost:3001/getSlots\", {\n          method: \"GET\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            id,\n            dateToSearch\n          })\n        });\n        const data = await res.json();\n        console.log(data);\n        if (res.status === 400 || !data) {\n          console.log(\"invalid details\");\n          toast.error(\"Invalid Details ðŸ‘Ž!\", {\n            position: \"top-center\"\n          });\n        } else {\n          setTimeSlotData(data);\n\n          //   Cookies.set('userLoginData',data.id,{expires:7});\n          // toast.success(\"Login Successfull\", {\n          //     position: \"top-center\"\n          // });\n        }\n      } catch (error) {\n        console.log(\"Login Error\" + error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"AvailableSlots\", props.date]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableSlots, \"IXS7apv8FW9tvb+mxtliv06He8I=\");\n_c = AvailableSlots;\nexport default AvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"AvailableSlots\");","map":{"version":3,"names":["Cookies","React","useState","useEffect","ToastContainer","toast","jsxDEV","_jsxDEV","AvailableSlots","props","_s","dateToSearch","date","id","timeSlotData","setTimeSlotData","fetchData","res","fetch","method","headers","body","JSON","stringify","data","json","console","log","status","error","position","message","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/AvailableSlots.js"],"sourcesContent":["import Cookies from 'js-cookie';\nimport React from 'react'\nimport { useState , useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AvailableSlots = async (props) => {\n    const dateToSearch=props.date;\n    // const id=Cookies.get('userLoginData').id;\n    const id=\"jndjwnj\"\n    const [timeSlotData,setTimeSlotData]=useState([]);\n    useEffect(() => {\n        const fetchData=async()=>{\n    try {\n        const res = await fetch(\"http://localhost:3001/getSlots\", {\n            method: \"GET\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                id,dateToSearch\n            })\n        });\n  \n  \n        const data = await res.json();\n        console.log(data);\n  \n        if (res.status === 400 || !data) {\n            console.log(\"invalid details\");\n            toast.error(\"Invalid Details ðŸ‘Ž!\", {\n                position: \"top-center\"\n            });\n        } else {\n            setTimeSlotData(data);\n            \n        //   Cookies.set('userLoginData',data.id,{expires:7});\n            // toast.success(\"Login Successfull\", {\n            //     position: \"top-center\"\n            // });\n           \n        }\n    } catch (error) {\n        console.log(\"Login Error\" + error.message);\n    }\n};\nfetchData();\n  }, []);\n    \n  return (\n    <div>\n      AvailableSlots\n      {props.date}\n      {/* {timeSlotData} */}\n    </div>\n  )\n}\n\nexport default AvailableSlots\n"],"mappings":";;AAAA,OAAOA,OAAO,MAAM,WAAW;AAC/B,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAE5C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAG,MAAOC,KAAK,IAAK;EAAAC,EAAA;EACpC,MAAMC,YAAY,GAACF,KAAK,CAACG,IAAI;EAC7B;EACA,MAAMC,EAAE,GAAC,SAAS;EAClB,MAAM,CAACC,YAAY,EAACC,eAAe,CAAC,GAACb,QAAQ,CAAC,EAAE,CAAC;EACjDC,SAAS,CAAC,MAAM;IACZ,MAAMa,SAAS,GAAC,MAAAA,CAAA,KAAS;MAC7B,IAAI;QACA,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;UACtDC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACL,cAAc,EAAE;UACpB,CAAC;UACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YACjBV,EAAE;YAACF;UACP,CAAC;QACL,CAAC,CAAC;QAGF,MAAMa,IAAI,GAAG,MAAMP,GAAG,CAACQ,IAAI,EAAE;QAC7BC,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QAEjB,IAAIP,GAAG,CAACW,MAAM,KAAK,GAAG,IAAI,CAACJ,IAAI,EAAE;UAC7BE,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;UAC9BtB,KAAK,CAACwB,KAAK,CAAC,qBAAqB,EAAE;YAC/BC,QAAQ,EAAE;UACd,CAAC,CAAC;QACN,CAAC,MAAM;UACHf,eAAe,CAACS,IAAI,CAAC;;UAEzB;UACI;UACA;UACA;QAEJ;MACJ,CAAC,CAAC,OAAOK,KAAK,EAAE;QACZH,OAAO,CAACC,GAAG,CAAC,aAAa,GAAGE,KAAK,CAACE,OAAO,CAAC;MAC9C;IACJ,CAAC;IACDf,SAAS,EAAE;EACT,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA;IAAAyB,QAAA,GAAK,gBAEH,EAACvB,KAAK,CAACG,IAAI;EAAA;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEP;AAEV,CAAC;AAAA1B,EAAA,CAlDKF,cAAc;AAAA6B,EAAA,GAAd7B,cAAc;AAoDpB,eAAeA,cAAc;AAAA,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}