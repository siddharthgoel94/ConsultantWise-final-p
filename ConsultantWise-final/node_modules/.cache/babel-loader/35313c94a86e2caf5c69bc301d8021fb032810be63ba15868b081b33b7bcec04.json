{"ast":null,"code":"var _jsxFileName = \"/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/AvailableSlots.js\";\n// import Cookies from 'js-cookie';\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableSlots = props => {\n  //     const dateToSearch=props.date;\n  //     // const id=Cookies.get('userLoginData').id;\n  //     const id=\"jndjwnj\"\n  //     const [timeSlotData,setTimeSlotData]=useState([]);\n  //     useEffect(() => {\n  //         const fetchData=async()=>{\n  //     try {\n  //         const res = await fetch(\"http://localhost:3001/getSlots\", {\n  //             method: \"GET\",\n  //             headers: {\n  //                 \"Content-Type\": \"application/json\"\n  //             },\n  //             body: JSON.stringify({\n  //                 id,dateToSearch\n  //             })\n  //         });\n\n  //         const data = await res.json();\n  //         console.log(data);\n\n  //         if (res.status === 400 || !data) {\n  //             console.log(\"invalid details\");\n  //             toast.error(\"Invalid Details ðŸ‘Ž!\", {\n  //                 position: \"top-center\"\n  //             });\n  //         } else {\n  //             setTimeSlotData(data);\n\n  //         //   Cookies.set('userLoginData',data.id,{expires:7});\n  //             // toast.success(\"Login Successfull\", {\n  //             //     position: \"top-center\"\n  //             // });\n\n  //         }\n  //     } catch (error) {\n  //         console.log(\"Login Error\" + error.message);\n  //     }\n  // };\n  // fetchData();\n  //   }, []);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"AvailableSlots\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = AvailableSlots;\nexport default AvailableSlots;\nvar _c;\n$RefreshReg$(_c, \"AvailableSlots\");","map":{"version":3,"names":["React","useState","useEffect","ToastContainer","toast","jsxDEV","_jsxDEV","AvailableSlots","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/siddharthgoel_goel2105outlook.com/Desktop/DoctorWise-GDSC/src/components/AvailableSlots.js"],"sourcesContent":["// import Cookies from 'js-cookie';\nimport React from 'react'\nimport { useState , useEffect } from 'react';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst AvailableSlots = (props) => {\n//     const dateToSearch=props.date;\n//     // const id=Cookies.get('userLoginData').id;\n//     const id=\"jndjwnj\"\n//     const [timeSlotData,setTimeSlotData]=useState([]);\n//     useEffect(() => {\n//         const fetchData=async()=>{\n//     try {\n//         const res = await fetch(\"http://localhost:3001/getSlots\", {\n//             method: \"GET\",\n//             headers: {\n//                 \"Content-Type\": \"application/json\"\n//             },\n//             body: JSON.stringify({\n//                 id,dateToSearch\n//             })\n//         });\n  \n  \n//         const data = await res.json();\n//         console.log(data);\n  \n//         if (res.status === 400 || !data) {\n//             console.log(\"invalid details\");\n//             toast.error(\"Invalid Details ðŸ‘Ž!\", {\n//                 position: \"top-center\"\n//             });\n//         } else {\n//             setTimeSlotData(data);\n            \n//         //   Cookies.set('userLoginData',data.id,{expires:7});\n//             // toast.success(\"Login Successfull\", {\n//             //     position: \"top-center\"\n//             // });\n           \n//         }\n//     } catch (error) {\n//         console.log(\"Login Error\" + error.message);\n//     }\n// };\n// fetchData();\n//   }, []);\n    \n  return (\n    <div>\n      AvailableSlots\n      {/* {props.date} */}\n      {/* {timeSlotData} */}\n    </div>\n  )\n}\n\nexport default AvailableSlots\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAE5C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAIC,KAAK,IAAK;EAClC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,oBACEF,OAAA;IAAAG,QAAA,EAAK;EAEH;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEI;AAEV,CAAC;AAAAC,EAAA,GAlDKP,cAAc;AAoDpB,eAAeA,cAAc;AAAA,IAAAO,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}